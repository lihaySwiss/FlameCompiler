program -> statement_list

statement_list -> statement
statement_list -> statement_list statement

statement -> if_statement 
statement -> while_statement 
statement -> assignment 
statement -> deceleration
statement -> for_statement
statement -> expression
statement -> return_statement
statement -> function

for_statement -> for ( assignment ; condition ; expression ) { statement_list }

if_statement -> if ( condition ) { statement_list } 
if_statement -> if ( condition ) { statement_list } else { statement_list }

while_statement -> while ( condition ) { statement_list }

deceleration -> type identifier := expression
deceleration -> type identifier

assignment -> identifier := expression

type -> int
type -> bool
type -> char

void_type -> void

expression -> factor
expression -> expression arop factor
expression -> expression bitop factor 
expression -> identifier unary_expression 

factor -> number
factor -> identifier
factor -> literal
factor -> ( expression )
factor -> bool_type

condition -> expression relational_operator expression

relational_operator -> ==
relational_operator -> !=
relational_operator -> <
relational_operator -> >
relational_operator -> <=
relational_operator -> >=

arop -> - 
arop -> +  
arop -> *  
arop -> /  

unary_expression -> ++ 
unary_expression -> --   

bitop -> | 
bitop -> & 
bitop -> >> 
bitop -> << 

return_statement -> return factor

function -> give type identifier ( input_var_list ) { statement_list return_statement }
function -> void_type identifier ( input_var_list ) { statement_list }

input_var_list -> input_var
input_var_list -> input_var , input_var_list
input_var_list -> ''

input_var -> type identifier

bool_type -> true
bool_type -> false

print -> scream ( expression )